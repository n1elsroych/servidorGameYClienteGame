package main;

import formEvents.ClientConnectionEvent;
import formEvents.DataReceivedEventEvent;
import formEvents.ClientDisconnectionEvent;
import formEvents.FormEventsListener;
import formEvents.ValidationErrorEvent;
import java.awt.Cursor;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import threads.Client;
import tools.Protocol;

public class GameWindow extends javax.swing.JFrame implements FormEventsListener{

    private final String SERVER_ADDRESS = "localhost";
    private final int PORT = 8888;
    
    private Client client;
    private Login login;
    private Register register;
    
    private boolean isShipFocused;
    //private boolean logged;
    
    public GameWindow() {
        initComponents();
        setLocationRelativeTo(null);
        //logged = false;
        try {
            client = new Client(SERVER_ADDRESS, PORT);
            client.connect();
            client.addFormEventsListener(this);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        configTable();
        configImage();
    }
    
    private void configTable(){
        for (int i = 0; i < jTable1.getColumnCount(); i++){
            jTable1.getColumnModel().getColumn(i).setPreferredWidth(100);
        }
    }
    
    private void configImage(){
        Icon shipImage = new ImageIcon(new ImageIcon(getClass().getResource("/img/barco.gif")).getImage()
                    .getScaledInstance(lbShipImage.getWidth(), lbShipImage.getHeight(), 0));
        lbShipImage.setIcon(shipImage);
        isShipFocused = false;
    }
    
    public Client getClientReference(){
        return client;
    }
    
    public void setLoginReference(Login login){
        this.login = login;
    }
    
    void setRegisterReference(Register register) {
        this.register = register;
    }
    
    public void sessionStarted(){
        lbConnection.setText("SesiÃ³n iniciada correctamente :)");
        //logged = true;
        setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbConnection = new javax.swing.JLabel();
        lbShipImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbConnection.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbConnection.setText("Conectando...");
        lbConnection.setName(""); // NOI18N

        lbShipImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/barco.gif"))); // NOI18N
        lbShipImage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lbShipImageFocusLost(evt);
            }
        });
        lbShipImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbShipImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbShipImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbShipImageMouseExited(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(102, 153, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null", "null", "null", "null", "null", "null"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(70);
        jTable1.setShowGrid(true);
        jTable1.setTableHeader(null);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1)
                        .addGap(31, 31, 31)
                        .addComponent(lbShipImage)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbConnection)
                        .addContainerGap(879, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbConnection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbShipImage, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbShipImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbShipImageMouseEntered
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lbShipImageMouseEntered

    private void lbShipImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbShipImageMouseExited
        setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_lbShipImageMouseExited

    private void lbShipImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbShipImageMouseClicked
         lbShipImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
         isShipFocused = true;
    }//GEN-LAST:event_lbShipImageMouseClicked

    private void lbShipImageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lbShipImageFocusLost
        System.out.println("foco perdido");
        lbShipImage.setBorder(null);
    }//GEN-LAST:event_lbShipImageFocusLost

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        System.out.println("Focuseado");
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();
        
        //jTable1.
        
        isShipFocused = false;
        lbShipImage.setBorder(null);
        System.out.println("Cell gained focus: Row " + row + ", Column " + col);
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameWindow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbConnection;
    private javax.swing.JLabel lbShipImage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onConnected(ClientConnectionEvent evt) {
        setVisible(false);
        login = new Login(this);
        login.setVisible(true);
    }

    @Override
    public void onValidationError(ValidationErrorEvent evt) {
        login.showValidationError(evt.getValidationError());
    }

    @Override
    public void onDataReceived(DataReceivedEventEvent evt) {
        String data = evt.getData();
            System.out.println(data);
        if (Protocol.isLoginSuccess(data)){
            sessionStarted();
            login.dispose();
            return;
        }
        if (Protocol.isLoginError(data)){
            login.showValidationError(Protocol.getLoginError(data));
        }
        if (Protocol.isRegisterSuccess(data)){
            sessionStarted();
            register.dispose();
            return;
        }
        if (Protocol.isRegisterError(data)){
            register.showValidationError(Protocol.getRegisterError(data));
        }
        if (Protocol.isSessionId(data)){
            int sessionId = Protocol.getSessionId(data);
            try {
                client.setCommunication(sessionId);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    @Override
    public void onDisconnection(ClientDisconnectionEvent evt) {
        lbConnection.setText("No tienes conexion");
    }
}
